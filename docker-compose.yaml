version: '3.8'
services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    volumes:
      - ./data:/usr/share/elasticsearch/data
    networks:
      - elastic_network  # Connect elasticsearch to the "elastic_network" network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.8.2
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200  # Use the service name as the hostname to connect
    ports:
      - 5601:5601
    networks:
      - elastic_network  # Connect kibana to the "elastic_network" network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.2
    container_name: logstash
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - config.reload.automatic=true
    volumes:
      - ./logstash/data:/usr/share/logstash/data
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/input:/usr/share/logstash/input
      - ./logstash/output:/usr/share/logstash/output
    networks:
      - elastic_network  # Connect logstash to the "elastic_network" network

# Define the "elastic_network" network
networks:
  elastic_network:
    driver: bridge  # You can also use other network drivers if needed
